(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{364:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"redis-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-数据类型"}},[t._v("#")]),t._v(" Redis 数据类型")]),t._v(" "),a("p",[t._v("Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。")]),t._v(" "),a("h3",{attrs:{id:"集合类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合类型"}},[t._v("#")]),t._v(" 集合类型")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("sadd key value1 (value1 value1 value1) "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加集合")]),t._v("\n\nSCARD key  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取集合的成员数 length")]),t._v("\n\nsmembers key "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回集合中的所有成员")]),t._v("\n\nSDIFFSTORE destination key1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回给定所有集合的差集并存储在 destination 中")]),t._v("\n\nsrandmember key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" count 正负表示能不能重复\n\nspop key 随机删除一个元素\n\n")])])]),a("h3",{attrs:{id:"有序集合类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有序集合类型"}},[t._v("#")]),t._v(" 有序集合类型")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);